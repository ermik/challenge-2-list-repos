{"version":3,"sources":["services/github.js","components/UserProfile.js","components/UserPicker.js","components/Repo.js","components/RepoListing.js","App.js","serviceWorker.js","index.js"],"names":["githubGraphqlFetch","query","variables","fetch","method","headers","Authorization","concat","console","log","Content-Type","Accept","body","JSON","stringify","then","r","json","catch","e","error","getUserAndRepos","_x","_getUserAndRepos","apply","this","arguments","_callee","username","_ref","data","regenerator_default","a","wrap","_context","prev","next","reposQuery","user","sent","abrupt","t0","stop","findUserQuery","findUserByName","_x2","_findUserByName","_callee2","string","_ref2","_context2","search","nodes","UserWrapper","styled","div","_templateObject","Stats","_templateObject2","ProfilePicture","_templateObject3","DWARFScore","props","react_default","createElement","scoreStrings","unknown","crackedPlates","chippedGlasses","bluntKnives","bentForks","smashedBottles","burnedCorks","cutCloth","treadFat","_props$user$contribut","contributionsCollection","totalIssueContributions","totalCommitContributions","totalRepositoryContributions","totalPullRequestContributions","totalPullRequestReviewContributions","score","organizations","totalCount","followers","starredRepositories","description","stringForScore","ScoreWrapper","h3","_templateObject4","veryLow","low","ok","great","amazing","extreme","regular","verLow","UserProfile","login","_props$data","avatarUrl","followerCount","name","orgCount","_props$data$contribut","style","backgroundImage","UserProfile_DWARFScore","loadOptions","Object","asyncToGenerator","mark","inputValue","callback","options","map","info","label","value","filter","o","handleInput","newValue","replace","UserPicker","_React$useState","React","useState","_React$useState2","slicedToArray","changeUsername","useEffect","onChange","pickUsername","useCallback","option","id","react_select_browser_esm","cacheOptions","onInputChange","placeholder","RepoWrapper","Repo_templateObject","RepoName","Repo_templateObject2","RepoTitle","Repo_templateObject3","RepoStats","Repo_templateObject4","RepoStat","_templateObject5","Repo","createdAt","forkCount","watchCount","watchers","starCount","stargazers","href","url","RepoList","RepoListing_templateObject","RepoListing","undefined","length","i","components_Repo","key","App","updateUsername","_React$useState3","_React$useState4","updateUser","t1","className","components_UserPicker","components_UserProfile","components_RepoListing","repositories","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPAIMA,SAAqB,SAACC,EAAOC,GAAR,OAAsBC,MAJvB,iCAIgD,CACxEC,OAAQ,OACRC,QAAS,CACPC,cAAA,UAAAC,OANc,qBACUC,QAAQC,IAAI,sBAA8B,4BAMlEC,eAAgB,mBAChBC,OAAU,oBAEZC,KAAMC,KAAKC,UAAU,CAAEb,QAAOC,gBAE7Ba,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAM,SAAAC,GAAC,OAAIX,QAAQY,MAAMD,OAErB,SAAeE,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA+BC,GAA/B,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgBpC,EAAmBqC,EAAY,CAClDC,KAAMV,IAFH,cAAAC,EAAAK,EAAAK,KACET,EADFD,EACEC,KADFI,EAAAC,KAAA,EAAAD,EAAAM,OAAA,SAOIV,EAAKQ,MAPT,cAAAJ,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAAAA,EAAAM,OAAA,SASI,IATJ,yBAAAN,EAAAQ,SAAAf,EAAA,wCAaP,IAAMU,EAAU,yuBAuCVM,EAAa,mLAYZ,SAAeC,EAAtBC,GAAA,OAAAC,EAAAtB,MAAAC,KAAAC,sDAAO,SAAAqB,EAA8BC,GAA9B,IAAAC,EAAAnB,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACkBpC,EAAmB2C,EAAe,CACvD1C,MAAO+C,IAFJ,cAAAC,EAAAC,EAAAX,KACGT,EADHmB,EACGnB,KADHoB,EAAAf,KAAA,EAAAe,EAAAV,OAAA,SAOIV,EAAKqB,OAAOC,OAPhB,cAAAF,EAAAf,KAAA,EAAAe,EAAAT,GAAAS,EAAA,SAAAA,EAAAV,OAAA,SASI,IATJ,yBAAAU,EAAAR,SAAAK,EAAA,y0CC7EP,IAqCMM,EAAcC,IAAOC,IAAVC,KAqBXC,EAAQH,IAAOC,IAAVG,KAWLC,EAAiBL,IAAOC,IAAVK,KAYdC,EAAa,SAACC,GAChB,IAAKA,EAAMxB,KACP,OAAOyB,EAAA/B,EAAAgC,cAAA,WAAMC,EAAaC,SAFJ,IAuC1BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EA9C0BC,EAUtBb,EAAMxB,KAAKsC,wBALXC,EALsBF,EAKtBE,wBACAC,EANsBH,EAMtBG,yBACAC,EAPsBJ,EAOtBI,6BACAC,EARsBL,EAQtBK,8BACAC,EATsBN,EAStBM,oCAEEC,GA4BNf,EA3BIW,EA4BJV,EA3BIY,EA4BJX,EA3BIY,EA4BJX,EA3BIS,EA4BJR,EA3BIM,EA4BJL,EA3BIV,EAAMxB,KAAK6C,cAAcC,WA4B7BX,EA3BIX,EAAMxB,KAAK+C,UAAUD,WA4BzBV,EA3BIZ,EAAMxB,KAAKgD,oBAAoBF,YA8B9BjB,EAAgBK,EACiB,IAAhCJ,EAAiBC,IACjBC,EAAYC,GAAkBE,EAChCC,GACA,KAhCAa,EAAcC,EAAeN,GAEjC,OAAQnB,EAAA/B,EAAAgC,cAAA,WAAKD,EAAA/B,EAAAgC,cAACyB,EAAD,KAAeF,KAG1BE,EAAenC,IAAOoC,GAAVC,KA8BlB,IAAM1B,EAAe,CACjBC,QAAS,0CACT0B,QAAS,kDACTC,IAAK,yCACLC,GAAI,2DACJC,MAAK,0CACLC,QAAS,4DACTC,QAAS,qEACTC,QAAS,gEAGPV,EAAiB,SAACN,GACpB,OAAIA,EAAQ,EACDjB,EAAakC,OACbjB,EAAQ,GACRjB,EAAa4B,IACbX,EAAQ,GACXA,EAAQ,IACDjB,EAAa8B,MACbb,EAAQ,IACRjB,EAAa+B,QACbd,GAAS,IACTjB,EAAagC,QAEjBhC,EAAa6B,GAEb7B,EAAaiC,SAIbE,EAvKK,SAACtC,GACjB,IAAKA,EAAMhC,OAASgC,EAAMhC,KAAKuE,MAC3B,OAAO,KAGX7F,QAAQC,IAAIqD,EAAMhC,MALS,IAAAwE,EAUvBxC,EAAMhC,KAFNyE,EARuBD,EAQvBC,UAIEC,GAZqBF,EASvBG,MAGmB3C,EAAMhC,KAAKuD,WAAa,IAAID,YAC7CsB,GAAY5C,EAAMhC,KAAKqD,eAAiB,IAAIC,WAbvBuB,EAoBvB7C,EAAMhC,KAAK8C,wBAJXE,EAhBuB6B,EAgBvB7B,yBAGAG,EAnBuB0B,EAmBvB1B,oCAGJ,OACIlB,EAAA/B,EAAAgC,cAACX,EAAD,KACIU,EAAA/B,EAAAgC,cAACL,EAAD,CAAgBiD,MAAO,CAACC,gBAAe,OAAAtG,OAASgG,EAAT,QACvCxC,EAAA/B,EAAAgC,cAACP,EAAD,KACIM,EAAA/B,EAAAgC,cAAA,4BACAD,EAAA/B,EAAAgC,cAAA,WAAMwC,EAAN,cACAzC,EAAA/B,EAAAgC,cAAA,WAAM0C,EAAN,kBACA3C,EAAA/B,EAAAgC,cAAA,WAAMc,EAAN,YACAf,EAAA/B,EAAAgC,cAAA,WAAMiB,EAAN,SAEJlB,EAAA/B,EAAAgC,cAAC8C,EAAD,CAAYxE,KAAMwB,EAAMhC,iBC9B9BiF,EAAW,eAAAlF,EAAAmF,OAAAC,EAAA,EAAAD,CAAAjF,EAAAC,EAAAkF,KAAG,SAAAvF,EAAOwF,EAAYC,GAAnB,IAAAtF,EAAAuF,EAAA,OAAAtF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOQ,EAAeuE,GAHtB,OAGNrF,EAHMI,EAAAK,KAIN8E,EAAUvF,EAAKwF,IAAI,SAAAC,GAAQ,IACrBd,EAAgBc,EAAhBd,KAAMJ,EAAUkB,EAAVlB,MACd,GAAKA,EAAL,CAGA,IAAImB,EAAQnB,EAIZ,OAHII,IACAe,EAAK,GAAAjH,OAAMiH,EAAN,MAAAjH,OAAgBkG,EAAhB,MAEF,CAAEgB,MAAOpB,EAAOmB,YACxBE,OAAO,SAAAC,GAAC,QAAMA,IACjBP,EAASC,GAfGnF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAiBZ1B,QAAQY,MAARc,EAAAO,IACA2E,EAAS,IAlBG,yBAAAlF,EAAAQ,SAAAf,EAAA,iBAAH,gBAAAL,EAAAuB,GAAA,OAAAhB,EAAAL,MAAAC,KAAAC,YAAA,GAsBXkG,EAAc,SAAAC,GAChB,MAAwB,kBAAbA,EACA,GAEJA,EAASC,QAAQ,MAAO,KAkCpBC,EA/BI,SAACjE,GAAU,IAAAkE,EACSC,IAAMC,SAAS,CAC9CV,MAAO1D,EAAMlC,SACb6F,MAAO3D,EAAMlC,WAHSuG,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAgB,EAAA,GACnBpG,EADmBuG,EAAA,GACTE,EADSF,EAAA,GAM1BF,IAAMK,UAAU,WACRxE,EAAMlC,WAAaA,EAAS6F,OAGhC3D,EAAMyE,SAAS3G,EAAS6F,QACzB,CAAC3D,EAAOlC,IAEX,IAAM4G,EAAeP,IAAMQ,YAAY,SAAAC,GACnCL,EAAeK,IAChB,CAACL,IAEJ,OACItE,EAAA/B,EAAAgC,cAAA,OAAK2E,GAAG,cACJ5E,EAAA/B,EAAAgC,cAAC4E,EAAA,EAAD,CACAC,cAAY,EAEZ9B,YAAaA,EACb+B,cAAelB,EACfW,SAAUC,EACVO,YAAa,k9BCxDzB,IA2BMC,EAAc1F,IAAOC,IAAV0F,KAUXC,EAAW5F,IAAOC,IAAV4F,KAKRC,EAAY9F,IAAOtB,EAAVqH,KAWTC,EAAYhG,IAAOC,IAAVgG,KAKTC,EAAWlG,IAAOC,IAAVkG,KASCC,EAnEF,SAAC5F,GAAU,IAAAwC,EACqBxC,EAAMhC,KAAvC6H,EADYrD,EACZqD,UAAWlD,EADCH,EACDG,KAAMlB,EADLe,EACKf,YACnBqE,EAAY9F,EAAMhC,KAAK8H,UACvBC,EAAa/F,EAAMhC,KAAKgI,SAAS1E,WACjC2E,EAAYjG,EAAMhC,KAAKkI,WAAW5E,WAExC,OAAKqB,GAAQmD,EACF,MAGXpJ,QAAQC,IAAIkJ,GAEJ5F,EAAA/B,EAAAgC,cAACgF,EAAD,KAEJjF,EAAA/B,EAAAgC,cAACkF,EAAD,KACInF,EAAA/B,EAAAgC,cAACoF,EAAD,CAAWa,KAAMnG,EAAMhC,KAAKoI,KAAMpG,EAAMxB,KAAxC,IAA+CmE,GAC/C1C,EAAA/B,EAAAgC,cAAA,SAAIuB,IAERxB,EAAA/B,EAAAgC,cAACsF,EAAD,KACIvF,EAAA/B,EAAAgC,cAACwF,EAAD,KAAWI,EAAX,UACA7F,EAAA/B,EAAAgC,cAACwF,EAAD,KAAWK,EAAX,aACA9F,EAAA/B,EAAAgC,cAACwF,EAAD,KAAWO,EAAX,6LCpBZ,IAiBMI,EAAW7G,IAAOC,IAAV6G,KAQCC,EAzBK,SAACvG,GACjB,OAAKA,EAAMhC,OACNgC,EAAMhC,KAAKsB,YACgBkH,IAA5BxG,EAAMhC,KAAKsB,MAAMmH,QACjBzG,EAAMhC,KAAKsB,MAAMmH,OAAS,EAClBxG,EAAA/B,EAAAgC,cAAA,kCAGZxD,QAAQC,IAAIqD,GAEJC,EAAA/B,EAAAgC,cAACmG,EAAD,KACHrG,EAAMhC,KAAKsB,MAAMkE,IAAI,SAACtG,EAAGwJ,GACtB,OAAQzG,EAAA/B,EAAAgC,cAACyG,EAAD,CAAMC,IAAKF,EAAG1I,KAAMd,EAAGsB,KAAMwB,EAAMxB,YCyBxCqI,MAlCf,WAAe,IAAA3C,EACsBC,IAAMC,SAAS,SADrCC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAgB,EAAA,GACNpG,EADMuG,EAAA,GACIyC,EADJzC,EAAA,GAAA0C,EAEc5C,IAAMC,SAAS,IAF7B4C,EAAA9D,OAAAoB,EAAA,EAAApB,CAAA6D,EAAA,GAENvI,EAFMwI,EAAA,GAEAC,EAFAD,EAAA,GAeb,OAXA7C,IAAMK,UAAU,WACT1G,GAILoF,OAAAC,EAAA,EAAAD,CAAAjF,EAAAC,EAAAkF,KAAC,SAAAvF,IAAA,OAAAI,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAO,GACCsI,EADD7I,EAAAE,KAAA,EACkBf,EAAgBO,GADlC,OAAAM,EAAA8I,GAAA9I,EAAAK,MAAA,EAAAL,EAAAO,IAAAP,EAAA8I,IAAA,wBAAA9I,EAAAQ,SAAAf,KAADqF,IAIC,CAAC+D,EAAYnJ,IAGdmC,EAAA/B,EAAAgC,cAAA,OAAKiH,UAAU,OACblH,EAAA/B,EAAAgC,cAAA,UAAQiH,UAAU,cAChBlH,EAAA/B,EAAAgC,cAAA,iCACAD,EAAA/B,EAAAgC,cAAA,yHAGAD,EAAA/B,EAAAgC,cAACkH,EAAD,CAAY3C,SAAUqC,KAExB7G,EAAA/B,EAAAgC,cAAA,WAAS2E,GAAG,YACV5E,EAAA/B,EAAAgC,cAACmH,EAAD,CAAarJ,KAAMQ,KAErByB,EAAA/B,EAAAgC,cAAA,WAAS2E,GAAG,eACV5E,EAAA/B,EAAAgC,cAACoH,EAAD,CAAatJ,KAAMQ,EAAK+I,aAAc/I,KAAMA,EAAK+D,WCvBrCiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7H,EAAA/B,EAAAgC,cAAC6H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnL,KAAK,SAAAoL,GACjCA,EAAaC","file":"static/js/main.9228d997.chunk.js","sourcesContent":["const githubGQLEndpoint = 'https://api.github.com/graphql';\nconst loneToken = '652bacb1e6419f335'\nconst secondToken = () => { console.log(\"Yes, I commited it\"); return '628df30740627346bd114c6'; };\n\nconst githubGraphqlFetch = (query, variables) => fetch(githubGQLEndpoint, {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${loneToken + secondToken()}`,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  body: JSON.stringify({ query, variables })\n})\n  .then(r => r.json())\n  .catch(e => console.error(e));\n\nexport async function getUserAndRepos(username) {\n  const {data} = await githubGraphqlFetch(reposQuery, {\n    user: username\n  })\n\n  try {\n    // Avoid malformed objects\n    return data.user;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst reposQuery = `query($user: String!) {\n  user(login: $user) {\n    avatarUrl\n    name\n    login\n    followers {\n      totalCount\n    }\n    organizations {\n      totalCount\n    }\n    contributionsCollection {\n      totalIssueContributions\n      totalCommitContributions\n      totalRepositoryContributions\n      totalPullRequestContributions\n      totalPullRequestReviewContributions\n    }\n    starredRepositories {\n      totalCount\n    }\n    repositories(privacy: PUBLIC, affiliations: OWNER, first: 10) {\n      nodes {\n        createdAt\n        name\n        description\n        watchers {\n          totalCount\n        }\n        forkCount\n        stargazers {\n          totalCount\n        }\n        url\n      }\n    }\n  }\n}`\n\nconst findUserQuery = `query($query: String!) {\n  search(query: $query, type: USER, first: 10) {\n    userCount\n    nodes {\n      ... on User {\n        name\n        login\n      }\n    }\n  }\n}`;\n\nexport async function findUserByName(string) {\n  const { data } = await githubGraphqlFetch(findUserQuery, {\n    query: string,\n  })\n\n  try {\n    // Avoid malformed objects\n    return data.search.nodes;\n  } catch (e) {\n    return [];\n  }\n}\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst UserProfile = (props) => {\n    if (!props.data || !props.data.login) {\n        return null;\n    }\n\n    console.log(props.data);\n\n    const {\n        avatarUrl,\n        name,\n    } = props.data;\n\n    const followerCount = (props.data.followers || {}).totalCount;\n    const orgCount = (props.data.organizations || {}).totalCount;\n    const {\n        // totalIssueContributions,\n        totalCommitContributions,\n        // totalRepositoryContributions,\n        // totalPullRequestContributions,\n        totalPullRequestReviewContributions\n    } = props.data.contributionsCollection;\n\n    return (\n        <UserWrapper>\n            <ProfilePicture style={{backgroundImage: `url(${avatarUrl})`}} />\n            <Stats>\n                <div>Recent stats:</div>\n                <div>{followerCount} followers</div>\n                <div>{orgCount} organizations</div>\n                <div>{totalCommitContributions} commits</div>\n                <div>{totalPullRequestReviewContributions} PRs</div>\n            </Stats>\n            <DWARFScore user={props.data} />\n        </UserWrapper>\n    )\n}\n\nconst UserWrapper = styled.div`\n    display: flex;\n    flex-flow: row nowrap;\n    color: wheat;\n    background-color: #98173a;\n    border-radius: 3px;\n    padding: 10px;\n\n    & > *:first-child {\n        margin-right: 10px;\n    }\n    & > *:last-child {\n        margin-left: 10px;\n    }\n    & > *:note(:first-child),\n    & > *:note(:last-child) {\n        margin-right: 10px;\n        margin-left: 10px;\n    }\n`;\n\nconst Stats = styled.div`\n    flex: 0 0 auto;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-between;\n    background-color: #1e0658;\n    color: #f8f8fd;\n    padding: 5px;\n    border-radius: 3px;\n`;\n\nconst ProfilePicture = styled.div`\n    flex: 0 0 130px;\n    width: 130px;\n    height: 130px;\n    background-color: #fefefe;\n    background-size: contain;\n    border-radius: 3px;\n`;\n\n/**\n * Deterministic World Adevnture and Research Finder\n */\nconst DWARFScore = (props) => {\n    if (!props.user) {\n        return <div>{scoreStrings.unknown}</div>\n    }\n    const {\n        totalIssueContributions,\n        totalCommitContributions,\n        totalRepositoryContributions,\n        totalPullRequestContributions,\n        totalPullRequestReviewContributions\n    } = props.user.contributionsCollection;\n    const score = secretScore(\n        totalCommitContributions,\n        totalPullRequestContributions,\n        totalPullRequestReviewContributions,\n        totalRepositoryContributions,\n        totalIssueContributions,\n        props.user.organizations.totalCount,\n        props.user.followers.totalCount,\n        props.user.starredRepositories.totalCount,\n    );\n    let description = stringForScore(score);\n\n    return (<div><ScoreWrapper>{description}</ScoreWrapper></div>)\n}\n\nconst ScoreWrapper = styled.h3`\n    font-family: 'IM Fell French Canon', 'Baskerville', serif;\n    font-weight: 500;\n    /* font-style: italic; */\n    font-size: 1.8rem;\n    vertical-align: middle;\n    padding: 0 40px;\n    justify-self: center;\n    align-self: center;\n    flex-grow: 0;\n`\n\nfunction secretScore(\n    crackedPlates,\n    chippedGlasses,\n    bluntKnives,\n    bentForks,\n    smashedBottles,\n    burnedCorks,\n    cutCloth,\n    treadFat,\n) {\n    return (\n        (crackedPlates * burnedCorks) +\n        ((chippedGlasses + bluntKnives) * 13) +\n        ((bentForks + smashedBottles) / cutCloth) +\n        treadFat\n    ) / 144;\n}\n\nconst scoreStrings = {\n    unknown: \"Their accomplishments remain a mystery.\",\n    veryLow: \"One could only wonder, but that one isn't them.\",\n    low: \"Not one to aid in cooking with trolls.\",\n    ok: \"O.K. as long as you avoid hidden doors and webbed woods.\",\n    great: `You may have found your next \"burglar\".`,\n    amazing: \"You'd be glad you had them if you have to share a barrel.\",\n    extreme: \"Take them with you and make sure you don't forget the hankerchief.\",\n    regular: \"Might work, as long as your journey doesn't involve dragons.\",\n}\n\nconst stringForScore = (score) => {\n    if (score < 1) {\n        return scoreStrings.verLow;\n    } else if (score < 10) {\n        return scoreStrings.low;\n    } else if (score > 50) {\n        if (score < 100) {\n            return scoreStrings.great;\n        } else if (score < 200) {\n            return scoreStrings.amazing;\n        } else if (score >= 300) {\n            return scoreStrings.extreme;\n        }\n        return scoreStrings.ok;\n    } else {\n        return scoreStrings.regular;\n    }\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport { default as Select } from 'react-select/async';\nimport { findUserByName } from '../services/github';\n\n\nconst loadOptions = async (inputValue, callback) => {\n\n    try {\n        const data = await findUserByName(inputValue);\n        const options = data.map(info => {\n            const { name, login } = info;\n            if (!login) {\n                return undefined;\n            }\n            let label = login;\n            if (name) {\n                label = `${label} (${name})`;\n            }\n            return { value: login, label };\n        }).filter(o => !!o);\n        callback(options);\n    } catch (e) {\n        console.error(e);\n        callback([]);\n    }\n};\n\nconst handleInput = newValue => {\n    if (typeof newValue !== 'string') {\n        return \"\";\n    }\n    return newValue.replace(/\\W/g, '');\n}\n\nconst UserPicker = (props) => {\n    const [username, changeUsername] = React.useState({\n        label: props.username,\n        value: props.username\n    })\n\n    React.useEffect(() => {\n        if (props.username === username.value) {\n            return;\n        }\n        props.onChange(username.value)\n    }, [props, username]);\n\n    const pickUsername = React.useCallback(option => {\n        changeUsername(option);\n    }, [changeUsername]);\n\n    return (\n        <div id=\"userPicker\">\n            <Select\n            cacheOptions\n            // initialValue={{}}\n            loadOptions={loadOptions}\n            onInputChange={handleInput}\n            onChange={pickUsername}\n            placeholder={\"find a user lookup repos\"}\n             />\n        </div>\n    )\n}\n\nexport default UserPicker;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Repo = (props) => {\n    const { createdAt, name, description } = props.data;\n    const forkCount = props.data.forkCount;\n    const watchCount = props.data.watchers.totalCount;\n    const starCount = props.data.stargazers.totalCount;\n\n    if (!name || forkCount) {\n        return null;\n    }\n\n    console.log(createdAt);\n\n    return (<RepoWrapper>\n\n        <RepoName>\n            <RepoTitle href={props.data.url}>{props.user}/{name}</RepoTitle>\n            <p>{description}</p>\n        </RepoName>\n        <RepoStats>\n            <RepoStat>{forkCount} forks</RepoStat>\n            <RepoStat>{watchCount} watchers</RepoStat>\n            <RepoStat>{starCount} stars</RepoStat>\n        </RepoStats>\n\n    </RepoWrapper>)\n}\n\nconst RepoWrapper = styled.div`\n    flex-grow: 0;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 10px;\n    padding: 5px 2px 5px 2px;\n`\n\nconst RepoName = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n`;\n\nconst RepoTitle = styled.a`\n    font-weight: 500;\n    &, &:active, &:visited {\n        color: inherit;\n        text-decoration: none;\n    }\n    &:hover {\n        color: #19ff32;\n    }\n    margin: 0;\n`\nconst RepoStats = styled.div`\n    flex: 0 0 auto;\n    flex-basis: 20%;\n`;\n\nconst RepoStat = styled.div`\n    background-color: rgb(15,15,15);\n    color: white;\n    font-weight: 500;\n    margin: 5px;\n    padding: 3px;\n    border-radius: 5px;\n`;\n\nexport default Repo;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport Repo from './Repo';\n\nconst RepoListing = (props) => {\n    if (!props.data ||\n        !props.data.nodes ||\n        props.data.nodes.length === undefined ||\n        props.data.nodes.length < 1) {\n        return (<div>Nothing to show...</div>);\n    }\n\n    console.log(props);\n\n    return (<RepoList>\n        {props.data.nodes.map((r, i) => {\n            return (<Repo key={i} data={r} user={props.user} />)\n        })}\n    </RepoList>)\n}\n\nconst RepoList = styled.div`\n    display: block;\n\n    & > *:nth-child(2n+1) {\n        background-color: rgb(240,240,240);\n    }\n`;\n\nexport default RepoListing;\n","import React from 'react';\nimport './App.css';\nimport { getUserAndRepos } from './services/github';\nimport UserProfile from './components/UserProfile';\nimport UserPicker from './components/UserPicker';\nimport RepoListing from './components/RepoListing';\n\nfunction App() {\n  const [username, updateUsername] = React.useState(\"ermik\");\n  const [user, updateUser] = React.useState({});\n\n  React.useEffect(() => {\n    if (!username) {\n      return;\n    }\n\n    (async () => {\n      updateUser(await getUserAndRepos(username));\n    })()\n\n  }, [updateUser, username])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>An Unexpected Party</h1>\n        <p>\n          Certain wizard always vetted his co-conspirators, so should you. Pick a name to see what they've been up to.\n        </p>\n        <UserPicker onChange={updateUsername} />\n      </header>\n      <section id=\"userInfo\">\n        <UserProfile data={user} />\n      </section>\n      <section id=\"repoListing\">\n        <RepoListing data={user.repositories} user={user.login} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}